@model IEnumerable<Final.Models.TempCartViewModel>

@{
    ViewBag.Title = "Giỏ hàng tạm thời";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var customerId = Session["CustomerID"] as int?;
    var sessionIdFromModel = Model.FirstOrDefault()?.SessionID ?? "";
}

<h2>Giỏ hàng tạm thời</h2>

@if (!Model.Any())
{
    <p>Giỏ hàng của bạn hiện không có sản phẩm tạm lưu.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Mã đặt chỗ</th>
                <th>Phim</th>
                <th>Rạp</th>
                <th>Ghế</th>
                <th>Loại vé</th>
                <th>Giá</th>
                <th>Suất chiếu</th>
                <th>Thức ăn</th>
                <th>Số lượng</th>
                <th>Thời gian còn lại</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.ReservationID</td>
                    <td>@item.MovieTitle</td>
                    <td>@item.CinemaName</td>
                    <td>@(string.IsNullOrEmpty(item.SeatNumber) ? "-" : item.SeatNumber)</td>
                    <td>@(string.IsNullOrEmpty(item.TicketTypeName) ? "-" : item.TicketTypeName)</td>
                    <td>@item.Price.ToString("N0") VNĐ</td>
                    <td>@(item.ScreeningTime?.ToString("HH:mm dd/MM/yyyy") ?? "N/A")</td>
                    <td>@(string.IsNullOrEmpty(item.FoodName) ? "-" : item.FoodName)</td>
                    <td>
                        @(item.ItemType == "Ticket" ? item.Quantity.ToString() : item.FoodQuantity > 0 ? item.FoodQuantity.ToString() : "-")
                    </td>
                    <td>
                        @{
                            var expireTime = item.ExpirationTime.HasValue ? item.ExpirationTime.Value : DateTime.Now.AddMinutes(5);
                        }
                        <span class="countdown" data-expire="@expireTime.ToString("yyyy-MM-ddTHH:mm:ss")"></span>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button id="checkoutBtn" class="btn btn-success" @(customerId.HasValue && customerId > 0 ? "" : "disabled")>
        @(customerId.HasValue && customerId > 0 ? "Thanh toán" : "Đăng nhập để thanh toán")
    </button>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            var sessionId = sessionStorage.getItem('tempCartSessionId');
            console.log("TemporaryCart SessionID from storage:", sessionId);

            var customerId = @(customerId ?? 0);

            $('#checkoutBtn').click(function () {
                if (customerId === 0) {
                    alert("Vui lòng đăng nhập để thanh toán!");
                    window.location.href = '@Url.Action("Login", "Account")';
                    return;
                }

                // Nếu không có sessionId, lấy từ server
                if (!sessionId) {
                    $.ajax({
                        url: '@Url.Action("GetLatestSessionId", "Order")',
                        type: 'GET',
                        async: false, // Đảm bảo lấy sessionId trước khi tiếp tục
                        success: function (data) {
                            sessionId = data.sessionId;
                            console.log("Fetched SessionID from server:", sessionId);
                        },
                        error: function () {
                            console.error("Failed to fetch sessionId from server");
                        }
                    });
                }

                if (!sessionId) {
                    alert("Lỗi: Không tìm thấy sessionId. Vui lòng thử lại.");
                    return;
                }

                // Thêm xác nhận trước khi thanh toán
                if (!confirm("Bạn có chắc muốn thanh toán giỏ hàng này?")) {
                    return; // Hủy thanh toán nếu người dùng chọn "No"
                }

                console.log("Sending checkout request with sessionId:", sessionId);

                $.ajax({
                    url: '@Url.Action("Checkout", "Order")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ sessionId: sessionId }),
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            sessionStorage.removeItem('tempCartSessionId'); // Xóa sessionId sau khi thanh toán
                            window.location.href = '@Url.Action("OrderHistory", "Order")';
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Checkout error:", xhr.responseText);
                        alert("Lỗi hệ thống: " + (xhr.responseText || "Không thể xử lý thanh toán"));
                    }
                });
            });

            // Countdown timer
            $('.countdown').each(function () {
                var $this = $(this);
                var expireTime = new Date($this.data('expire'));

                var updateCountdown = function () {
                    var now = new Date();
                    var diff = Math.floor((expireTime - now) / 1000);

                    if (diff <= 0) {
                        $this.text("Hết hạn");
                        $('#checkoutBtn').prop('disabled', true).text('Giỏ hàng đã hết hạn');
                    } else {
                        var minutes = Math.floor(diff / 60);
                        var seconds = diff % 60;
                        $this.text(`${minutes}:${seconds < 10 ? "0" : ""}${seconds}`);
                    }
                };

                updateCountdown();
                setInterval(updateCountdown, 1000);
            });
        });
    </script>
}